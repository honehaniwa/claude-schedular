name: CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        rust: [stable, beta]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install system dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libgtk-3-dev \
          libglib2.0-dev \
          libwebkit2gtk-4.1-dev \
          libjavascriptcoregtk-4.1-dev \
          libsoup-3.0-dev \
          libgtk-3-0 \
          pkg-config \
          build-essential \
          libssl-dev \
          libayatana-appindicator3-dev \
          librsvg2-dev \
          libxdo-dev
      
    - name: Install Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ matrix.rust }}
        components: rustfmt, clippy
        
    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
          
    - name: Check formatting
      run: cargo fmt --all -- --check
      
    - name: Run clippy
      run: cargo clippy --all-targets --all-features -- -D warnings
      
    - name: Run tests
      run: cargo test --verbose
      
    - name: Build
      run: cargo build --verbose
      
    - name: Build release
      run: cargo build --release --verbose

  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install system dependencies (Ubuntu)
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libgtk-3-dev \
          libglib2.0-dev \
          libwebkit2gtk-4.1-dev \
          libjavascriptcoregtk-4.1-dev \
          libsoup-3.0-dev \
          libgtk-3-0 \
          pkg-config \
          build-essential \
          libssl-dev \
          libayatana-appindicator3-dev \
          librsvg2-dev \
          libxdo-dev
      
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: llvm-tools-preview
        
    - name: Install cargo-llvm-cov
      uses: taiki-e/install-action@cargo-llvm-cov
      
    - name: Generate coverage report
      run: cargo llvm-cov --all-features --workspace --lcov --output-path lcov.info
      
    # TODO: Re-enable when CODECOV_TOKEN is configured
    # - name: Upload coverage to Codecov
    #   uses: codecov/codecov-action@v4
    #   with:
    #     files: lcov.info
    #     fail_ci_if_error: true

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      
    - name: Install cargo-audit
      run: cargo install cargo-audit
      
    - name: Run security audit
      run: cargo audit

  build-binaries:
    name: Build Release Binaries
    runs-on: ${{ matrix.os }}
    needs: [test]
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary_name: claude-scheduler
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            binary_name: claude-scheduler.exe
          - os: macos-latest
            target: x86_64-apple-darwin
            binary_name: claude-scheduler
          - os: macos-latest
            target: aarch64-apple-darwin
            binary_name: claude-scheduler
            
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install system dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libgtk-3-dev \
          libglib2.0-dev \
          libwebkit2gtk-4.1-dev \
          libjavascriptcoregtk-4.1-dev \
          libsoup-3.0-dev \
          libgtk-3-0 \
          pkg-config \
          build-essential \
          libssl-dev \
          libayatana-appindicator3-dev \
          librsvg2-dev \
          libxdo-dev
      
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        target: ${{ matrix.target }}
        
    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-${{ matrix.target }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        
    - name: Build release binary
      run: cargo build --release --target ${{ matrix.target }}
      
    - name: Upload binary artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.target }}-binary
        path: target/${{ matrix.target }}/release/${{ matrix.binary_name }}
        retention-days: 30 